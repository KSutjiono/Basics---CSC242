#include <iostream>
using namespace std;
int main() {
    //Homework 4 question 1
    //reading all the coordinates of the cities
      double cities[20][2];
      int numberOfCities;
      cout << "Please enter the number of cities: ";
        cin >> numberOfCities;
      cout << "Enter the coordinates of the cities separated by space: " << endl;
        for (int cityIndex = 0; cityIndex < numberOfCities; cityIndex++) {
          cin >> cities[cityIndex][0] >> cities[cityIndex][1];
      }
      cout << endl;
      }
    //Homework 4 question 3
      const int SIZE = 3;
      int main() {
        int a[SIZE][SIZE];
    //use randomly generated number to fill the matrix.
      for (int rowIndex = 0; rowIndex < SIZE; rowIndex++) {
        for (int columnIndex = 0; columnIndex < SIZE; columnIndex++) {
        // rand() % 2 gives two possible values of 0 and 1
        // since I need the values to be 3 and 4.
          a[rowIndex][columnIndex] = rand() % 2 + 3;
          }
        }
        // print the matrix
          for (int rowIndex = 0; rowIndex < SIZE; rowIndex++) {
          for (int columnIndex = 0; columnIndex < SIZE; columnIndex++) {
        // rand() % 2 gives two possible values of 0 and 1
        // since I need the values to be 3 and 4.
          cout << a[rowIndex][columnIndex] << "\t";
        }
          cout << endl;
        }
          for (int columnIndex = 0; columnIndex < SIZE; columnIndex++) {
        // check to see if I have all 3 columns
          if (a[0][columnIndex] == 3 && a[1][columnIndex] == 3 && a[2][columnIndex] == 3) {
          cout << "Column " << columnIndex << " has all 3s." << endl;
        }
        }
        }
    // homework 4 question 2 help.
      const int COLUMN_SIZE = 4;
      //we are familiar with --> int sum(const int a[], int size);
        double sumRow(const double a[][COLUMN_SIZE], int rowIndex) // a[][COLUMN_SIZE], int rowSize
        // double sumRow(const double a[][], int rowIndex) -- illegal.
        {
          double total = 0;
          for (int column = 0; column < COLUMN_SIZE; column++)
          {
            total += a[rowIndex][column];
           }
           return total;
         }
    int main()
    {
    // get the input for the matrix
    const int ROW_SIZE = 3;
    double m[ROW_SIZE][COLUMN_SIZE]; // change matrix to double
    cout << "Enter " << ROW_SIZE << " rows and "
         << COLUMN_SIZE << " columns: " << endl;
    for (int i = 0; i < ROW_SIZE; i++)
      for (int j = 0; j < COLUMN_SIZE; j++)
        cin >> m[i][j];
    //display the matrix
      cout << endl << "The matrix entered is: " << endl;
      for (int row = 0; row < ROW_SIZE; row++)
      {
        for (int column = 0; column < COLUMN_SIZE; column++)
      {
        cout << m[row][column] << "\t";
      }
        cout << endl;
      }
        for (int rowIndex = 0; rowIndex < ROW_SIZE; rowIndex++) {
        cout << "The sum of all elements on row " << rowIndex << " is: " << sumRow(m, rowIndex) <<
        endl;
      }
      //cout << "\nSum of all elements is " << sum(m, ROW_SIZE) << endl;
   return 0;
   }
   





#include <iostream>
using namespace std;
//Project work together.
void balance() { cout << "balance function called.\n"; }
void deposit() { cout << "deposit function called.\n"; }
void withdraw() { cout << "withdraw function called.\n"; }
void goodbye() { cout << "goodbye function called.\n"; }
void display() {
cout << "1. Sign in\n";
cout << "2. Balance\n";
cout << "3. Deposit\n";
cout << "4. Withdraw\n";
cout << "5. Exit\n";
cout << "Please enter your selection: ";
}
int main() {
int selection = 0;
bool loggedIn = false;
double accounts[2] = { 1000.0, 1000.0 };
int accountNumber;
display();
cin >> selection;
while (true) {
if (selection < 1 || selection > 5) {
display();
cin >> selection;
}
else {
if (selection == 1) {
cout << "Please enter an account number: ";
cin >> accountNumber;
loggedIn = true;
}
else {
if (loggedIn) {
if (selection == 2) {
balance(); }
else if (selection == 3) {
deposit(); }
else if (selection == 4) {
withdraw();
}
else {
loggedIn = false;
goodbye();
}
}
else {
selection = 0;
cout << "Not logged in.\n";
}
}
selection = 0;
}
}
}
/*
// Homework 4 question 1
double distance(double x1, double y1, double x2, double y2) {
double d = sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
return d;
}
int main() {
// reading all the coordinates of the cities
double cities[20][2];
int numberOfCities;
cout << "Please enter the number of cities: ";
cin >> numberOfCities;
cout << "Enter the coordinates of the cities separated by space: " << endl;
for (int cityIndex = 0; cityIndex < numberOfCities; cityIndex++) {
cin >> cities[cityIndex][0] >> cities[cityIndex][1];
}
cout << endl;
int cityIndex = 4;
cout << "As an example, let us calculate the total distance from city " << cityIndex << " to all
other cities" << endl;
double totalDistance = 0;
for (int theOtherCityIndex = 0; theOtherCityIndex < numberOfCities; theOtherCityIndex++) {
double d0 = distance(cities[cityIndex][0], cities[cityIndex][1],
cities[theOtherCityIndex][0], cities[theOtherCityIndex][1]);
totalDistance += d0;
}
cout << "Total distance to city " << cityIndex << " is " << totalDistance << endl;
}
*/
